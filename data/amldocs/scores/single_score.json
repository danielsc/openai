{
    "query": "how can I see the quota assigned to my workspace in the v2 cli?",
    "result": "You can use the following Azure CLI command to view the quotas for your Machine Learning workspace:\n```\naz ml workspace compute show-quota --name <name> --resource-group <resource-group> [--compute-target <compute-target>] [--ids]\n```\n\nReplace `<name>` with the name of the Machine Learning workspace and `<resource-group>` with the resource group that contains the workspace. You can also add `--compute-target` and `--ids` options if you have specific requirements for viewing compute targets or identity information.",
    "context": [
        {
            "page_content": "\nAfter deployment, this role becomes available in the specified workspace. Now you can add and assign this role in the Azure portal.\n\nFor more information on custom roles, see [Azure custom roles](../role-based-access-control/custom-roles.md). \n\n### Azure Machine Learning operations\n\nFor more information on the operations (actions and not actions) usable with custom roles, see [Resource provider operations](../role-based-access-control/resource-provider-operations.md#microsoftmachinelearningservices). You can also use the following Azure CLI command to list operations:\n\n```azurecli-interactive\naz provider operation show \u2013n Microsoft.MachineLearningServices\n```\n\n## List custom roles\n\nIn the Azure CLI, run the following command:\n\n```azurecli-interactive\naz role definition list --subscription <sub-id> --custom-role-only true\n```\n\nTo view the role definition for a specific custom role, use the following Azure CLI command. The `<role-name>` should be in the same format returned by the command above:\n\n```azurecli-interactive\naz role definition list -n <role-name> --subscription <sub-id>\n```\n\n## Update a custom role\n\nIn the Azure CLI, run the following command:\n\n```azurecli-interactive\naz role definition update --role-definition update_def.json --subscription <sub-id>\n```\n\nYou need to have permissions on the entire scope of your new role definition. For example if this new role has a scope across three subscriptions, you need to have permissions on all three subscriptions. \n\n> [!NOTE]\n> Role updates can take 15 minutes to an hour to apply across all role assignments in that scope.\n\n## Use Azure Resource Manager templates for repeatability\n\nIf you anticipate that you'll need to recreate complex role assignments, an Azure Resource Manager template can be a significant help. The [machine-learning-dependencies-role-assignment template](https://github.com/Azure/azure-quickstart-templates/tree/master//quickstarts/microsoft.machinelearningservices/machine-learning-dependencies-role-assignment) shows how role assignments can be specified in source code for reuse. \n\n## Common scenarios\n\nThe following table is a summary of Azure Machine Learning activities and the permissions required to perform them at the least scope. For example, if an activity can be performed with a workspace scope (Column 4), then all higher scope with that permission will also work automatically. Note that for certain activities the permissions differ between V1 and V2 APIs.\n\n> [!IMPORTANT]\n> All paths in this table that start with `/` are **relative paths** to `Microsoft.MachineLearningServices/` :\n\n| Activity | Subscription-level scope | Resource group-level scope | Workspace-level scope |\n| ----- | ----- | ----- | ----- |\n| Create new workspace <sub>1</sub> | Not required | Owner or contributor | N/A (becomes Owner or inherits higher scope role after creation) |\n| Request subscription level Amlcompute quota or set workspace level quota | Owner, or contributor, or custom role </br>allowing `/locations/updateQuotas/action`</br> at subscription scope | Not Authorized | Not Authorized |\n| Create new compute cluster | Not required | Not required | Owner, contributor, or custom role allowing: `/workspaces/computes/write` |\n| Create new compute instance | Not required | Not required | Owner, contributor, or custom role allowing: `/workspaces/computes/write` |\n| Submitting any type of run (V1) | Not required | Not required | Owner, contributor, or custom role allowing: `\"/workspaces/*/read\", \"/workspaces/environments/write\", \"/workspaces/experiments/runs/write\", \"/workspaces/metadata/artifacts/write\", \"/workspaces/metadata/snapshots/write\", \"/workspaces/environments/build/action\", \"/workspaces/experiments/runs/submit/action\", \"/workspaces/environments/readSecrets/action\"` |\n| Submitting any type of run (V2) | Not required | Not required | Owner, contributor, or custom role allowing: `\"/workspaces/*/read\", \"/workspaces/environments/write\", \"/workspaces/jobs/*\", \"/workspaces/metadata/artifacts/write\", \"/workspaces/metadata/codes/*/write\", \"/workspaces/environments/build/action\", \"/workspaces/environments/readSecrets/action\"` |\n",
            "metadata": {
                "sourcefile": "UI/2023-04-06_191207_UTC/simple-4000-100/how-to-assign-roles-108.md"
            }
        },
        {
            "page_content": "\n## Troubleshooting\n\nHere are a few things to be aware of while you use Azure role-based access control (Azure RBAC):\n\n- When you create a resource in Azure, such as a workspace, you're not directly the owner of the resource. Your role is inherited from the highest scope role that you're authorized against in that subscription. As an example if you're a Network Administrator, and have the permissions to create a Machine Learning workspace, you would be assigned the Network Administrator role against that workspace, and not the Owner role.\n\n- To perform quota operations in a workspace, you need subscription level permissions. This means setting either subscription level quota or workspace level quota for your managed compute resources can only happen if you have write permissions at the subscription scope.\n\n- When there are two role assignments to the same Azure Active Directory user with conflicting sections of Actions/NotActions, your operations listed in NotActions from one role might not take effect if they are also listed as Actions in another role. To learn more about how Azure parses role assignments, read [How Azure RBAC determines if a user has access to a resource](../role-based-access-control/overview.md#how-azure-rbac-determines-if-a-user-has-access-to-a-resource)\n\n- To deploy your compute resources inside a VNet, you need to explicitly have permissions for the following actions:\n    - `Microsoft.Network/virtualNetworks/*/read` on the VNet resources.\n    - `Microsoft.Network/virtualNetworks/subnets/join/action` on the subnet resource.\n    \n    For more information on Azure RBAC with networking, see the [Networking built-in roles](../role-based-access-control/built-in-roles.md#networking).\n\n- It can sometimes take up to 1 hour for your new role assignments to take effect over cached permissions across the stack.\n\n## Next steps\n\n- [Enterprise security overview](concept-enterprise-security.md)\n- [Virtual network isolation and privacy overview](how-to-network-security-overview.md)\n- [Tutorial: Train and deploy a model](tutorial-train-deploy-notebook.md)\n- [Resource provider operations](../role-based-access-control/resource-provider-operations.md#microsoftmachinelearningservices)\n",
            "metadata": {
                "sourcefile": "UI/2023-04-06_191207_UTC/simple-4000-100/how-to-assign-roles-573.md"
            }
        },
        {
            "page_content": "\n## Assign managed identity\n\nYou can assign a system- or user-assigned [managed identity](../active-directory/managed-identities-azure-resources/overview.md) to a compute instance, to authenticate against other Azure resources such as storage. Using managed identities for authentication helps improve workspace security and management. For example, you can allow users to access training data only when logged in to a compute instance. Or use a common user-assigned managed identity to permit access to a specific storage account. \n\nYou can create compute instance with managed identity from Azure ML Studio:\n\n1.\tFill out the form to [create a new compute instance](?tabs=azure-studio#create).\n1.\tSelect **Next: Advanced Settings**.\n1.\tEnable **Assign a managed identity**.\n1.  Select **System-assigned** or **User-assigned** under **Identity type**.\n1.  If you selected **User-assigned**, select subscription and name of the identity.\n\nYou can use V2 CLI to create compute instance with assign system-assigned managed identity:\n\n```azurecli\naz ml compute create --name myinstance --identity-type SystemAssigned --type ComputeInstance --resource-group my-resource-group --workspace-name my-workspace\n```\n\nYou can also use V2 CLI with yaml file, for example to create a compute instance with user-assigned managed identity:\n\n```azurecli\nazure ml compute create --file compute.yaml --resource-group my-resource-group --workspace-name my-workspace\n```\n\nThe identity definition is contained in compute.yaml file:\n\n```yaml\nhttps://azuremlschemas.azureedge.net/latest/computeInstance.schema.json\nname: myinstance\ntype: computeinstance\nidentity:\n  type: user_assigned\n  user_assigned_identities: \n    - resource_id: identity_resource_id\n```\n\nOnce the managed identity is created, grant the managed identity at least Storage Blob Data Reader role on the storage account of the datastore, see [Accessing storage services](how-to-identity-based-service-authentication.md?tabs=cli#accessing-storage-services). Then, when you work on the compute instance, the managed identity is used automatically to authenticate against datastores.\n\n> [!NOTE]\n> The name of the created system managed identity will be in the format /workspace-name/computes/compute-instance-name in your Azure Active Directory. \n\nYou can also use the managed identity manually to authenticate against other Azure resources. The following example shows how to use it to get an Azure Resource Manager access token:\n\n```python\nimport requests\n\ndef get_access_token_msi(resource):\n    client_id = os.environ.get(\"DEFAULT_IDENTITY_CLIENT_ID\", None)\n    resp = requests.get(f\"{os.environ['MSI_ENDPOINT']}?resource={resource}&clientid={client_id}&api-version=2017-09-01\", headers={'Secret': os.environ[\"MSI_SECRET\"]})\n    resp.raise_for_status()\n    return resp.json()[\"access_token\"]\n\narm_access_token = get_access_token_msi(\"https://management.azure.com\")\n```\n\nTo use Azure CLI with the managed identity for authentication, specify the identity client ID as the username when logging in: \n```azurecli\naz login --identity --username $DEFAULT_IDENTITY_CLIENT_ID\n```\n\n> [!NOTE]\n> You cannot use ```azcopy``` when trying to use managed identity. ```azcopy login --identity``` will not work.\n\n## Add custom applications such as RStudio or Posit Workbench (preview)\n\n> [!IMPORTANT]\n> Items marked (preview) below are currently in public preview.\n> The preview version is provided without a service level agreement, and it's not recommended for production workloads. Certain features might not be supported or might have constrained capabilities.\n> For more information, see [Supplemental Terms of Use for Microsoft Azure Previews](https://azure.microsoft.com/support/legal/preview-supplemental-terms/).\n\nYou can set up other applications, such as RStudio, or Posit Workbench (formerly RStudio Workbench), when creating a compute instance. Follow these steps in studio to set up a custom application on your compute instance\n\n1.\tFill out the form to [create a new compute instance](?tabs=azure-studio#create)\n",
            "metadata": {
                "sourcefile": "UI/2023-04-06_191207_UTC/simple-4000-100/how-to-create-manage-compute-instance-534.md"
            }
        }
    ]
}